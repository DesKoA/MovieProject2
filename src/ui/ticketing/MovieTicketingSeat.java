/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.ticketing;

import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.border.LineBorder;

import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

import data.Reserve;
import data.Seat;
import db.dao.MovieDBManager;
import db.dao.ReserveDBManager;
import db.dao.SeatDBManager;
import db.dao.TheatersDBManager;
import login.loginpop;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import javax.swing.GroupLayout.Alignment;
import java.awt.GridLayout;
import java.awt.Insets;

import javax.swing.SwingConstants;

/**
 *
 * @author alfo4-9
 */
public class MovieTicketingSeat extends JFrame {
	public int adPersons;
	public int stPersons;
	public String movTitle;
	
	public MovieDBManager movieMgr;
	public TheatersDBManager thMgr;
	
	public JDesktopPane desktop;
	
	public LinkedHashMap<String, ArrayList<String>> timeList;
	public JButton seatBtn[][] = new JButton[10][10];
	public char ch;
	public int peopleNum;
	public LinkedHashMap<String, JLabel> hsLbList = new LinkedHashMap<String, JLabel>();
	public LinkedHashMap<String, String> hsNumList = new LinkedHashMap<String, String>();
	public JLabel[] lbList;
	public MovieTicketing mov;
	public ButtonGroup btnGr;
	listenForSeat lForSeat = new listenForSeat();
	
	int clickCount = 0;
	int count;
	int temp;	

	/**
	 * Creates new form MovieReservation
	 */
	
	public MovieTicketingSeat(MovieTicketing mov) {
		this.mov = mov;
		initComponents();
	}
	
	public void resetFrame() {
		dispose();
		mov.resetFrame();
	}
	
	/**    
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	public void initComponents() {
		mov = MovieTicketing.mov;
		Object[] obj = mov.getObjects();
		String[] dataList = mov.getDataList();
		movieMgr = new MovieDBManager();
		thMgr = new TheatersDBManager();
		Main = new JPanel();
		movieInfo = new JPanel();
		seatPanelLeft = new JPanel();
		resetRe = new JButton();
		movieInfoPoster = new JLabel();
		movieInfoName = new JLabel();
		movieInfoGrade = new JLabel();
		movieInfoMoney = new JLabel();
		movieInfoRating = new JLabel();
		movieInfoScreen = new JLabel();
		movieInfoDay = new JLabel();
		btnSeatSelect = new JButton();
		movieInfoTime = new JLabel();
		movieInfoPeople = new JLabel();
		movieInfoScreenName = new JLabel();
		movieInfoDayName = new JLabel();
		movieInfoPeopleName = new JLabel();
		movieInfoTimeName = new JLabel();
		movieInfoMoneyName = new JLabel();
		selectSeatInfo = new JPanel();
		movieInfoStar = new JLabel();
		peopleNum = (int)obj[9];
		lbList = new JLabel[peopleNum];
		
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setBackground(new Color(255, 255, 255));

		Main.setBackground(new Color(255, 255, 255));
		Main.setLayout(new AbsoluteLayout());
		
		movieInfo.setBackground(new Color(45, 45, 45));
		movieInfo.setLayout(new AbsoluteLayout());

		resetRe.setFont(new Font("³ª´®½ºÄù¾î", 1, 15)); // NOI18N
		resetRe.setText("¿¹¸Å ´Ù½ÃÇÏ±â");
		resetRe.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				resetFrame();
			}
		});
		movieInfo.add(resetRe, new AbsoluteConstraints(10, 10, 130, 30));
		
		movieInfoPoster.setOpaque(true);
		movieInfoPoster.setIcon((Icon)obj[0]);
		movieInfo.add(movieInfoPoster, new AbsoluteConstraints(40, 60, 200, 250));
		
		movieInfoName.setFont(new Font("³ª´®½ºÄù¾î", 0, 20)); // NOI18N
		movieInfoName.setForeground(new Color(255, 255, 255));
		movieInfoName.setText((String)obj[1]);
		movieInfo.add(movieInfoName, new AbsoluteConstraints(40, 320, -1, -1));

		movieInfoMoney.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoMoney.setForeground(new Color(255, 255, 255));
		movieInfoMoney.setText("±Ý¾×");
		movieInfo.add(movieInfoMoney, new AbsoluteConstraints(40, 500, -1, -1));

		movieInfoRating.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoRating.setForeground(new Color(255, 0, 0));
		movieInfoRating.setText("\uD3C9\uC810");
		movieInfo.add(movieInfoRating, new AbsoluteConstraints(40, 350, -1, -1));
		
		movieInfoGrade.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoGrade.setForeground(new Color(255, 0, 0));
		movieInfoGrade.setText((String)obj[2]);
		movieInfo.add(movieInfoGrade, new AbsoluteConstraints(205, 350, -1, -1));
		
		movieInfoScreen.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoScreen.setForeground(new Color(255, 255, 255));
		movieInfoScreen.setText("\uADF9\uC7A5");
		movieInfo.add(movieInfoScreen, new AbsoluteConstraints(40, 380, -1, -1));

		movieInfoDay.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoDay.setForeground(new Color(255, 255, 255));
		movieInfoDay.setText("³¯Â¥");
		movieInfo.add(movieInfoDay, new AbsoluteConstraints(40, 410, -1, -1));

		btnSeatSelect.setBackground(new Color(255, 255, 255));
		btnSeatSelect.setFont(new Font("³ª´®½ºÄù¾î", 1, 24)); // NOI18N
		btnSeatSelect.setText("\uC88C\uC11D \uC120\uD0DD");
		btnSeatSelect.setOpaque(false);
		btnSeatSelect.setEnabled(false);
		btnSeatSelect.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String mem = loginpop.LOGGED_IN;
				TheatersDBManager thMgr = new TheatersDBManager();
				int scNum = thMgr.selectOneScreenNo(movieInfoScreenName.getText(), movieInfoName.getText(), (Date)obj[10] , movieInfoTimeName.getText().substring(0, 5));
				SeatDBManager seatMgr = new SeatDBManager();
				for (int i = 0; i < lbList.length; i++) {
					String seatStr = lbList[i].getText();
					Seat seat = new Seat(0, scNum, seatStr.charAt(0), seatStr.charAt(1) - '0', mem);
					seatMgr.insertSeat(seat);
				}
				
				ArrayList<Integer> stList = seatMgr.selectAllSeatNo(scNum, mem);
				int[] stArray = new int[stList.size()];
				for (int i = 0; i < stList.size(); i++) {
					stArray[i] = stList.get(i);
				}
				
				JOptionPane.showMessageDialog(null, "¿¹¸Å°¡ ¿Ï·áµÇ¾ú½À´Ï´Ù.");
				
				ReserveDBManager rvMgr = new ReserveDBManager();
				SimpleDateFormat sf = new SimpleDateFormat("YYYYMMDD");
				String revNo = mem + scNum + sf.format(mov.movDate);
				// String String String int  Date String String int int int int
				// (¿¹¸ÅÀÎµ¦½º), ¿µÈ­Á¦¸ñ, È¸¿ø¾ÆÀÌµð, ±ØÀå¹øÈ£, »ó¿µÀÏ, ½ÃÀÛ½Ã°£, ³¡½Ã°£, ÁÂ¼®¹øÈ£, ¼ºÀÎ¼ö, ÇÐ»ý¼ö, ±Ý¾×, ¿¹¾àÀÏ
				Reserve rev = new Reserve(0, revNo, dataList[1], mem, Integer.parseInt(dataList[3]), mov.movDate, 
						dataList[5], dataList[6], stArray, Integer.parseInt(dataList[8]), Integer.parseInt(dataList[9]),
						Integer.parseInt(dataList[10]), new Date());
				rvMgr.insertReserve(rev);
				resetFrame();
			}
		});
		movieInfo.add(btnSeatSelect, new AbsoluteConstraints(50, 540, 190, -1));

		movieInfoTime.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoTime.setForeground(new Color(255, 255, 255));
		movieInfoTime.setText("\uC2DC\uAC04");
		movieInfo.add(movieInfoTime, new AbsoluteConstraints(40, 470, -1, -1));

		movieInfoPeople.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoPeople.setForeground(new Color(255, 255, 255));
		movieInfoPeople.setText("ÀÎ¿ø");
		movieInfo.add(movieInfoPeople, new AbsoluteConstraints(40, 440, -1, -1));
		
		movieInfoScreenName.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoScreenName.setForeground(new Color(255, 255, 255));
		movieInfoScreenName.setText((String)obj[4]);
		movieInfo.add(movieInfoScreenName, new AbsoluteConstraints(80, 380, -1, -1));

		movieInfoDayName.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoDayName.setForeground(new Color(255, 255, 255));
		movieInfoDayName.setText((String)obj[5]);
		movieInfo.add(movieInfoDayName, new AbsoluteConstraints(80, 410, -1, -1));

		movieInfoPeopleName.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoPeopleName.setForeground(new Color(255, 255, 255));
		movieInfoPeopleName.setText((String)obj[6]);
		movieInfo.add(movieInfoPeopleName, new AbsoluteConstraints(80, 440, -1, -1));

		movieInfoTimeName.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoTimeName.setForeground(new Color(255, 255, 255));
		movieInfoTimeName.setText((String)obj[7]);
		movieInfo.add(movieInfoTimeName, new AbsoluteConstraints(80, 470, -1, -1));
		
		movieInfoMoneyName.setFont(new Font("³ª´®½ºÄù¾î", 0, 18)); // NOI18N
		movieInfoMoneyName.setForeground(new Color(255, 255, 255));
		movieInfoMoneyName.setText((String)obj[8]);
		movieInfo.add(movieInfoMoneyName, new AbsoluteConstraints(80, 500, 80, -1));

		Main.add(movieInfo, new AbsoluteConstraints(730, 0, 280, 610));
        Main.add(seatPanelLeft, new AbsoluteConstraints(0, 0, 730, 600));
        seatPanelLeft.setLayout(null);
        
        selectSeatInfo.setBounds(517, 243, 176, 326);
        selectSeatInfo.setBorder(new LineBorder(Color.BLACK, 1));
        selectSeatInfo.setOpaque(true);
        
        seatBtnPanel = new JPanel();
        seatBtnPanel.setBounds(54, 134, 428, 435);
        seatPanelLeft.add(seatBtnPanel);
        
        SeatDBManager stMgr = new SeatDBManager();
        int scNum = thMgr.selectOneScreenNo(movieInfoScreenName.getText(), movieInfoName.getText(), (Date)obj[10] , movieInfoTimeName.getText().substring(0, 5));
        
        ArrayList<String> selSeatList = stMgr.selectAllSeatsName(scNum);
        for (char c = 'A'; c <= 'J'; c++) {
        	int i = c - 'A';
			for (int j = 0; j < 10; j++) {
				seatBtn[i][j] = new JButton();
				seatBtn[i][j].setVisible(true);
				seatBtn[i][j].setMargin(new Insets(0, 0, 0, 0));
				seatBtn[i][j].setText(j + 1 + "");
				seatBtn[i][j].setToolTipText(c + "" + (j + 1));
				seatBtn[i][j].setFont(new Font("³ª´®¹Ù¸¥°íµñ", 1, 15));
				seatBtn[i][j].setPreferredSize(new Dimension(25, 25));
				seatBtn[i][j].setContentAreaFilled(false);
				seatBtn[i][j].setFocusPainted(false);
				seatBtn[i][j].setOpaque(true);
				seatBtn[i][j].setForeground(Color.BLACK);
				seatBtn[i][j].setBackground(Color.LIGHT_GRAY);
				for (int k = 0; k < selSeatList.size(); k++) {
					if (seatBtn[i][j].getToolTipText().equals(selSeatList.get(k))) {
						seatBtn[i][j].setEnabled(false);
						// seatBtn[i][j].setUndecorated(true);
						seatBtn[i][j].setBorder(new LineBorder(Color.BLACK, 1));
						seatBtn[i][j].setBackground(Color.WHITE);
						seatBtn[i][j].setForeground(Color.BLACK);
						seatBtn[i][j].setFont(new Font("", 1, 30));
						seatBtn[i][j].setText("X");
						break;
					}
				}
				seatBtn[i][j].addActionListener(lForSeat);
				seatBtnPanel.add(seatBtn[i][j]);
			}
		}
        
        for (int i = 0; i < lbList.length; i++) {
        	String tempStr = "ÁÂ¼®" + (i + 1);
        	JLabel jlb = new JLabel(tempStr);
        	lbList[i] = jlb;
        	jlb.setBorder(new LineBorder(Color.BLACK, 1));
        	jlb.setHorizontalAlignment(SwingConstants.CENTER);
        	jlb.setPreferredSize(new Dimension(65, 35));
        	selectSeatInfo.add(lbList[i]);
        }
        
        // selectSeatInfo.setLayout(new FlowLayout(10, 5, 10, 5));
        selectSeatInfo.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
        seatPanelLeft.add(selectSeatInfo);
        
        seatBtnPanel.setLayout(new GridLayout(10, 5, 5, 5));
        
        lblScreen = new JLabel("S c r e e n");
        lblScreen.setFont(new Font("³ª´®¹Ù¸¥°íµñ", Font.PLAIN, 60));
        lblScreen.setBorder(new LineBorder(Color.black, 2));
        lblScreen.setHorizontalAlignment(SwingConstants.CENTER);
        lblScreen.setBounds(54, 41, 428, 62);
        seatPanelLeft.add(lblScreen);
        
        seatAZPanel = new JPanel();
        seatAZPanel.setBounds(12, 134, 30, 435);
        seatPanelLeft.add(seatAZPanel);
        for (char c = 'A'; c <= 'J'; c++) {
			JLabel lbl = new JLabel((String.valueOf(c)));
			lbl.setFont(new Font("³ª´®¹Ù¸¥°íµñ", Font.PLAIN, 24));
			lbl.setHorizontalAlignment(SwingConstants.RIGHT);
			seatAZPanel.add(lbl);
		}
        seatAZPanel.setLayout(new GridLayout(10, 0, 0, 0));
        selectSeatLb = new JLabel("\uC120\uD0DD\uD55C \uC88C\uC11D \uBC88\uD638");
        selectSeatLb.setHorizontalAlignment(SwingConstants.CENTER);
        selectSeatLb.setFont(new Font("±¼¸²", Font.PLAIN, 25));
        selectSeatLb.setBounds(496, 178, 220, 52);
        seatPanelLeft.add(selectSeatLb);
        
        JButton resetSeatBtn = new JButton("\uC88C\uC11D \uB2E4\uC2DC\uC120\uD0DD");
        resetSeatBtn.setFont(new Font("±¼¸²", Font.PLAIN, 17));
        resetSeatBtn.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		hsNumList.clear();
        		hsLbList.clear();
        		clickCount = 0;
        		btnSeatSelect.setEnabled(false);
        		count = 0;
        		temp = 0;
        		
        		for (int i = 0; i < seatBtn.length; i++) {
					for (int j = 0; j < seatBtn[i].length; j++) {
						seatBtn[i][j].setContentAreaFilled(false);
						seatBtn[i][j].setFocusPainted(false);
						seatBtn[i][j].setSelected(false);
						seatBtn[i][j].setOpaque(true);
						seatBtn[i][j].setBackground(Color.LIGHT_GRAY);
						seatBtn[i][j].setForeground(Color.BLACK);
						for (int k = 0; k < selSeatList.size(); k++) {
							if (seatBtn[i][j].getToolTipText().equals(selSeatList.get(k))) {
								seatBtn[i][j].setEnabled(false);
								// seatBtn[i][j].setUndecorated(true);
								seatBtn[i][j].setBorder(new LineBorder(Color.BLACK, 1));
								seatBtn[i][j].setBackground(Color.WHITE);
								seatBtn[i][j].setForeground(Color.BLACK);
								seatBtn[i][j].setFont(new Font("", 1, 30));
								seatBtn[i][j].setText("X");
								break;
							}
						}
					}
				}
        		
        		for (int i = 0; i < lbList.length; i++) {
        			String tempStr = "ÁÂ¼®" + (i + 1);
        			lbList[i].setText(tempStr);
        		}
        	}
        });
        resetSeatBtn.setBounds(517, 134, 176, 38);
        seatPanelLeft.add(resetSeatBtn);
        
		movieInfoStar.setBackground(new Color(255, 255, 255));
		movieInfoStar.setAlignmentY(0.0F);
		movieInfoStar.setIcon((Icon)obj[3]);
		movieInfo.add(movieInfoStar, new AbsoluteConstraints(78, 347, 120, 25));
		
		GroupLayout layout = new GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(Main, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(Main, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		getContentPane().setLayout(layout);
		
		pack();
		// mov = this;
	}// </editor-fold>
	
	public class listenForSeat implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent e) {
			JButton btn = (JButton) e.getSource();
			String toolTip = btn.getToolTipText();
			int ret = returnCheckNum();
				temp = count;
				if (ret != 9999) count = ret;
				else count = temp;
			if (btn.isSelected()) {
				clickCount--;
				btn.setBackground(Color.LIGHT_GRAY);
				btn.setForeground(Color.BLACK);
				btn.setSelected(false);
				hsLbList.get(toolTip).setText(hsNumList.get(toolTip));
				if (count > 0) hsLbList.remove(toolTip, lbList[--count]);
				else hsLbList.remove(toolTip, lbList[count]);
				if (clickCount < lbList.length) btnSeatSelect.setEnabled(false);
			} else if (ret != 9999 && !btn.isSelected()) {
				clickCount++;
				btn.setBackground(new Color(106, 119, 189));
				btn.setForeground(Color.WHITE);
				btn.setSelected(true);
				hsNumList.put(toolTip, lbList[count].getText());
				hsLbList.put(toolTip, lbList[count++]);
				if (clickCount == lbList.length) btnSeatSelect.setEnabled(true);
				hsLbList.get(toolTip).setText(toolTip);
			} else {
				JOptionPane.showMessageDialog(null, "ÁÂ¼®À» ¸ðµÎ ¼±ÅÃÇÏ¼Ì½À´Ï´Ù.\nÇöÀç ¼±ÅÃÇÏ½Å ÁÂ¼®À» Áö¿ì°í ´Ù½Ã ¼±ÅÃÇÏ¼¼¿ä.");
			}
		}
	}
	
	int returnCheckNum() {
		int ret;
		for (int i = 0; i < lbList.length; i++) {
			if (lbList[i].getText().contains("ÁÂ¼®")) {
				ret = i;
				return ret;
			}
		}
		return 9999;
	}
	/*
	 * public void actionPerformed(ActionEvent e) {
			JButton btn = (JButton) e.getSource();
			String toolTip = btn.getToolTipText();
			int checkNum = returnCheckNum();
			// checkNum = Integer.parseInt(hsNumList.get(toolTip).substring(2, 3));
			if (btn.isSelected()) {
				btn.setBackground(Color.LIGHT_GRAY);
				btn.setSelected(false);
				if (hsLbList.size() > 0) hsLbList.remove(toolTip, lbList[--count]);
				hsLbList.get(toolTip).setText(hsNumList.get(toolTip));
			} else {
				btn.setBackground(Color.RED);
				btn.setSelected(true);
				if (hsNumList.size() > 0) hsNumList.put(toolTip, lbList[count].getText());
				// if (hsLbList.get(toolTip).getText().contains("ÁÂ¼®"))
				// hsLbList.put(toolTip, lbList[checkNum]);
				checkNum = returnCheckNum();
				if (checkNum != 0) hsLbList.put(toolTip, lbList[count++]);
				else {
					System.out.println(checkNum);
					hsLbList.put(toolTip, lbList[checkNum]);
				}
				hsLbList.get(toolTip).setText(toolTip);
			}
		}

		int returnCheckNum() {
			int ret;
			for (int i = 0; i < lbList.length; i++) {
				if (lbList[i].getText().contains("ÁÂ¼®")) {
					ret = i;
					return ret;
				}
			}
			return 0;
		}

	 */
	
	private JPanel Main;
	public JButton btnSeatSelect;
	private JPanel movieInfo;
	private JPanel seatPanelLeft;
	public JPanel selectSeatInfo;
	public JLabel movieInfoDayName;
	public JLabel movieInfoMoneyName;
	public JLabel movieInfoScreenName;
	public JLabel movieInfoTimeName;
	public JLabel movieInfoPeopleName;
	private JLabel movieInfoName;
	private JLabel movieInfoMoney;
	private JLabel movieInfoRating;
	private JLabel movieInfoScreen;
	private JLabel movieInfoDay;
	private JLabel movieInfoTime;
	private JLabel movieInfoPeople;
	private JLabel movieInfoPoster;
	private JLabel movieInfoStar;
	private JLabel movieInfoGrade;
	private JButton resetRe;
	private JPanel seatBtnPanel;
	private JLabel lblScreen;
	private JPanel seatAZPanel;
	private JLabel selectSeatLb;
}
